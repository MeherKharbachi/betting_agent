# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/dataStrcuture/01_team_features.ipynb.

# %% auto 0
__all__ = ['TeamFeatures']

# %% ../../nbs/dataStrcuture/01_team_features.ipynb 3
import pandas as pd
import mongoengine
import datetime
import logging
from ..config.localconfig import CONFIG

# %% ../../nbs/dataStrcuture/01_team_features.ipynb 5
class TeamFeatures(mongoengine.Document):
    "Extract/Store the team-features for a given team at a given computation time"

    # Team info.
    team_id = mongoengine.StringField(db_field="teamId", required=True)

    # Recorded-date.
    recorded_date = mongoengine.DateTimeField(db_field="recordedDate", required=True)

    # Team-ranking.
    elo = mongoengine.FloatField(required=True)
    glicko = mongoengine.FloatField(required=True)
    glicko2 = mongoengine.FloatField(required=True)
    steph = mongoengine.FloatField(required=True)

    # Level.
    level = mongoengine.IntField(required=False)

    # Team-quality.
    quality_overall = mongoengine.FloatField(db_field="quality_Overall", required=True)
    quality_attack = mongoengine.FloatField(db_field="quality_Attack", required=True)
    quality_midfield = mongoengine.FloatField(
        db_field="quality_Midfield", required=True
    )
    quality_defence = mongoengine.FloatField(db_field="quality_Defence", required=True)

    # Goals and gd-features.
    goals_for = mongoengine.FloatField(required=True)
    goals_for_home = mongoengine.FloatField(required=True)
    goals_for_away = mongoengine.FloatField(required=True)
    goals_agg = mongoengine.FloatField(required=True)
    goals_agg_home = mongoengine.FloatField(required=True)
    goals_agg_away = mongoengine.FloatField(required=True)

    # Goals difference.
    gd = mongoengine.FloatField(db_field="goals_diff", required=True)
    gd_home = mongoengine.FloatField(db_field="goals_diff_home", required=True)
    gd_away = mongoengine.FloatField(db_field="goals_diff_away", required=True)
    goals_for_last = mongoengine.FloatField(required=True)
    goals_for_home_last = mongoengine.FloatField(required=True)
    goals_for_away_last = mongoengine.FloatField(required=True)
    goals_agg_last = mongoengine.FloatField(required=True)
    goals_agg_home_last = mongoengine.FloatField(required=True)
    goals_agg_away_last = mongoengine.FloatField(required=True)
    gd_last = mongoengine.FloatField(db_field="goals_diff_last", required=True)
    gd_home_last = mongoengine.FloatField(
        db_field="goals_diff_home_last", required=True
    )
    gd_away_last = mongoengine.FloatField(
        db_field="goals_diff_away_last", required=True
    )

    # Points based features.
    total_pts = mongoengine.FloatField(required=True)
    proportion_pts = mongoengine.FloatField(required=True)
    home_pts = mongoengine.FloatField(required=True)
    away_pts = mongoengine.FloatField(required=True)
    proportion_home_pts = mongoengine.FloatField(required=True)
    proportion_away_pts = mongoengine.FloatField(required=True)
    total_pts_last = mongoengine.FloatField(required=True)
    proportion_pts_last = mongoengine.FloatField(required=True)
    home_pts_last = mongoengine.FloatField(required=True)
    away_pts_last = mongoengine.FloatField(required=True)
    proportion_home_pts_last = mongoengine.FloatField(required=True)
    proportion_away_pts_last = mongoengine.FloatField(required=True)

    # Dominance.
    dominace = mongoengine.FloatField(min_value=0, max_value=1, required=True)

    # Index based features.
    index_for = mongoengine.FloatField(required=True)
    index_for_home = mongoengine.FloatField(required=True)
    index_for_away = mongoengine.FloatField(required=True)
    index_agg = mongoengine.FloatField(required=True)
    index_agg_home = mongoengine.FloatField(required=True)
    index_agg_away = mongoengine.FloatField(required=True)

    index_diff = mongoengine.FloatField(required=True)
    index_diff_home = mongoengine.FloatField(required=True)
    index_diff_away = mongoengine.FloatField(required=True)
    index_for_last = mongoengine.FloatField(required=True)
    index_for_home_last = mongoengine.FloatField(required=True)
    index_for_away_last = mongoengine.FloatField(required=True)
    index_agg_last = mongoengine.FloatField(required=True)
    index_agg_home_last = mongoengine.FloatField(required=True)
    index_agg_away_last = mongoengine.FloatField(required=True)
    index_diff_last = mongoengine.FloatField(required=True)
    index_diff_home_last = mongoengine.FloatField(required=True)
    index_diff_away_last = mongoengine.FloatField(required=True)

    # Xg features.
    xg_for = mongoengine.FloatField(db_field="xg_for", required=True)
    xg_for_home = mongoengine.FloatField(db_field="xg_for_home", required=True)
    xg_for_away = mongoengine.FloatField(db_field="xg_for_away", required=True)
    xg_agg = mongoengine.FloatField(db_field="xg_agg", required=True)
    xg_agg_home = mongoengine.FloatField(db_field="xg_agg_home", required=True)
    xg_agg_away = mongoengine.FloatField(db_field="xg_agg_away", required=True)
    xg_diff = mongoengine.FloatField(db_field="xg_diff", required=True)
    xg_diff_home = mongoengine.FloatField(db_field="xg_diff_home", required=True)
    xg_diff_away = mongoengine.FloatField(db_field="xg_diff_away", required=True)
    xg_for_last = mongoengine.FloatField(db_field="xg_for_last", required=True)
    xg_for_home_last = mongoengine.FloatField(
        db_field="xg_for_home_last", required=True
    )
    xg_for_away_last = mongoengine.FloatField(
        db_field="xg_for_away_last", required=True
    )
    xg_agg_last = mongoengine.FloatField(db_field="xg_agg_last", required=True)
    xg_agg_home_last = mongoengine.FloatField(
        db_field="xg_agg_home_last", required=True
    )
    xg_agg_away_last = mongoengine.FloatField(
        db_field="xg_agg_away_last", required=True
    )
    xg_diff_last = mongoengine.FloatField(db_field="xg_diff_last", required=True)
    xg_diff_home_last = mongoengine.FloatField(
        db_field="xg_diff_home_last", required=True
    )
    xg_diff_away_last = mongoengine.FloatField(
        db_field="xg_diff_away_last", required=True
    )

    # Big chances.
    bigchances_for = mongoengine.FloatField(
        db_field="bigchances_for", required=False, default=0.0
    )
    bigchances_for_home = mongoengine.FloatField(
        db_field="bigchances_for_home", required=False, default=0.0
    )
    bigchances_for_away = mongoengine.FloatField(
        db_field="bigchances_for_away", required=False, default=0.0
    )
    bigchances_agg = mongoengine.FloatField(
        db_field="bigchances_agg", required=False, default=0.0
    )
    bigchances_agg_home = mongoengine.FloatField(
        db_field="bigchances_agg_home", required=False, default=0.0
    )
    bigchances_agg_away = mongoengine.FloatField(
        db_field="bigchances_agg_away", required=False, default=0.0
    )
    bigchances_diff = mongoengine.FloatField(
        db_field="bigchances_diff", required=False, default=0.0
    )
    bigchances_diff_home = mongoengine.FloatField(
        db_field="bigchances_diff_home", required=False, default=0.0
    )
    bigchances_diff_away = mongoengine.FloatField(
        db_field="bigchances_diff_away", required=False, default=0.0
    )
    bigchances_for_last = mongoengine.FloatField(
        db_field="bigchances_for_last", required=False, default=0.0
    )
    bigchances_for_home_last = mongoengine.FloatField(
        db_field="bigchances_for_home_last", required=False, default=0.0
    )
    bigchances_for_away_last = mongoengine.FloatField(
        db_field="bigchances_for_away_last", required=False, default=0.0
    )
    bigchances_agg_last = mongoengine.FloatField(
        db_field="bigchances_agg_last", required=False, default=0.0
    )
    bigchances_agg_home_last = mongoengine.FloatField(
        db_field="bigchances_agg_home_last", required=False, default=0.0
    )
    bigchances_agg_away_last = mongoengine.FloatField(
        db_field="bigchances_agg_away_last", required=False, default=0.0
    )
    bigchances_diff_last = mongoengine.FloatField(
        db_field="bigchances_diff_last", required=False, default=0.0
    )
    bigchances_diff_home_last = mongoengine.FloatField(
        db_field="bigchances_diff_home_last", required=False, default=0.0
    )
    bigchances_diff_away_last = mongoengine.FloatField(
        db_field="bigchances_diff_away_last", required=False, default=0.0
    )

    # Key passes.
    keypasses_for = mongoengine.FloatField(
        db_field="keypasses_for", required=False, default=0.0
    )
    keypasses_for_home = mongoengine.FloatField(
        db_field="keypasses_for_home", required=False, default=0.0
    )
    keypasses_for_away = mongoengine.FloatField(
        db_field="keypasses_for_away", required=False, default=0.0
    )
    keypasses_agg = mongoengine.FloatField(
        db_field="keypasses_agg", required=False, default=0.0
    )
    keypasses_agg_home = mongoengine.FloatField(
        db_field="keypasses_agg_home", required=False, default=0.0
    )
    keypasses_agg_away = mongoengine.FloatField(
        db_field="keypasses_agg_away", required=False, default=0.0
    )
    keypasses_diff = mongoengine.FloatField(
        db_field="keypasses_diff", required=False, default=0.0
    )
    keypasses_diff_home = mongoengine.FloatField(
        db_field="keypasses_diff_home", required=False, default=0.0
    )
    keypasses_diff_away = mongoengine.FloatField(
        db_field="keypasses_diff_away", required=False, default=0.0
    )
    keypasses_for_last = mongoengine.FloatField(
        db_field="keypasses_for_last", required=False, default=0.0
    )
    keypasses_for_home_last = mongoengine.FloatField(
        db_field="keypasses_for_home_last", required=False, default=0.0
    )
    keypasses_for_away_last = mongoengine.FloatField(
        db_field="keypasses_for_away_last", required=False, default=0.0
    )
    keypasses_agg_last = mongoengine.FloatField(
        db_field="keypasses_agg_last", required=False, default=0.0
    )
    keypasses_agg_home_last = mongoengine.FloatField(
        db_field="keypasses_agg_home_last", required=False, default=0.0
    )
    keypasses_agg_away_last = mongoengine.FloatField(
        db_field="keypasses_agg_away_last", required=False, default=0.0
    )
    keypasses_diff_last = mongoengine.FloatField(
        db_field="keypasses_diff_last", required=False, default=0.0
    )
    keypasses_diff_home_last = mongoengine.FloatField(
        db_field="keypasses_diff_home_last", required=False, default=0.0
    )
    keypasses_diff_away_last = mongoengine.FloatField(
        db_field="keypasses_diff_away_last", required=False, default=0.0
    )

    meta = {
        "db_alias": "features",
        "collection": CONFIG["connections"]["features"]["team_features"],
        "ordering": ["-recorded_date"],
    }

    @classmethod
    def get_latest(
        cls,
        ra_team_id: str,  # Real-analytics team identifier.
        date: datetime.datetime = None,  # Find the lastest date prior to `date`.
    ):
        "Extract the latest available team-features value prior to a given point in time."
        if date is None:
            date = datetime.datetime.now()
        return (
            cls.objects(team_id=ra_team_id, recorded_date__lt=date)
            .order_by("-recorded_date")
            .first()
        )
